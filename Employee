class Employee(val name: String)
{
    var tasksCompeted = 0
    val taskslimit = 50
    
    fun addTasks(count: Int)
    {
        tasksCompeted += count
    }
    
    fun isOverLimit(): Boolean
    {
        return tasksCompeted > taskslimit
    }
    
    fun printInfo()
    {
        println("Имя: $name")
        println("Число выполненных задач: $tasksCompeted")
        
        if(isOverLimit())
        {
            println("Работник выполнил все задачи")
        }
        else
        {
            println("Работник не выполнил все задачи")
        }
        println()
    }
}

fun main()
{
    val employees = mutableListOf<Employee>()
    
    print("Введите количество работников: ")
    val employeeCount = readLine()?.toIntOrNull() ?: return
    
    for (i in 1..employeeCount) 
    {
        print("Введите имя работника #$i: ")
        val name = readLine() ?: ""
        val employee = Employee(name)
        
        println("Введите кол-во выполненных задач для $name (Через пробел):")
        val tasksInput = readLine()
        val tasks = tasksInput?.split(" ")?.mapNotNull {
            it.toIntOrNull()
        } ?: listOf()
        
        for (task in tasks) 
        {
            employee.addTasks(task)
        }
        employees.add(employee)
        println()
    }
    
    for (employee in employees) {
        employee.printInfo()
    }
}
